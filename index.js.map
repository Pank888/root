{"version":3,"sources":["src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport basicAuth from 'node-basicauth';\nimport bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport compression from 'compression';\nimport { existsSync } from 'fs';\n// import { init as initAdmin } from 'magic-admin';\n// import blog from 'magic-blog';\n// import db from 'magic-db';\nimport { isArray, isObject } from 'magic-types';\nimport { handle404, handle500 } from 'magic-errorHandler';\nimport headers from 'magic-http-headers';\nimport router from 'magic-router';\nimport morgan from 'morgan';\nimport { join } from 'path';\nimport favicon from 'serve-favicon';\nimport stylus from 'stylus';\nimport nib from 'nib';\n\nexport default\n  (M, app, dir) => {\n    const css = app.get('css') || stylus;\n    const env = app.get('env') || 'production';\n    const faviconPath = join(dir, 'public', 'favicon.ico');\n    // const dbSettings = app.get('dbOpts') || false;\n\n    const dirs = {\n      root: dir,\n      public: join(dir, app.get('publicDir') || 'public'),\n      cache: join(dir, app.get('cacheDir') || '.cache'),\n      views: join(dir, app.get('viewsDir') || 'views'),\n      ...app.get('dirs'),\n    };\n\n    app.set('css', css);\n    app.set('dirs', dirs);\n\n    app.use(\n      (req, res, next) => {\n        req.app = app;\n        next();\n      });\n\n    // set expiry headers\n    const customHeaders = {\n      ...app.get('headers'),\n      ...headers,\n    };\n    app.use(customHeaders);\n\n    const basicAuthConfig = app.get('basicAuth');\n    if (basicAuthConfig) {\n      app.use(basicAuth(basicAuthConfig));\n    }\n\n    // fs.existsSync only gets called once on first request\n    if (!app.get('faviconChecked') && !app.get('faviconExists')) {\n      app.set('faviconChecked', true);\n      app.set('faviconExists', existsSync(faviconPath));\n    }\n\n    if (app.get('faviconExists')) {\n      app.use(favicon(faviconPath));\n    }\n\n    app.set('views', dirs.views);\n    app.set('view engine', app.get('view engine') || 'jade');\n\n    app.use(compression({ threshold: 128 }));\n\n    const cssMiddleware =\n      (str, path) =>\n        css(str)\n          .set('filename', path)\n          .set('compress', env === 'production')\n          .use(nib())\n          .import('nib');\n\n    app.use(css.middleware({\n      src: dirs.public,\n      maxage: '1d',\n      compile: cssMiddleware,\n    }));\n\n    app.use(express.static(join(__dirname, 'public'), { maxAge: '1w' }));\n\n    app.use(express.static(dirs.public, { maxAge: '1d' }));\n\n    // if (dbSettings && !app.get('db')) {\n    //   app.use(db);\n    // }\n\n    // if (app.enabled('admin')) {\n    //   app.use(initAdmin);\n    // }\n\n    /*\n    TODO: reenable\n    if (app.get('blogRoot')) {\n      let blogRoot = app.get('blogRoot');\n      if (typeof blogRoot !== 'string' && typeof blogRoot !== 'number') {\n        blogRoot = 'blog';\n      }\n      if (blogRoot.charAt(0) !== '/') {\n        blogRoot = '/' + blogRoot;\n      } else {\n        app.set('blogRoot', blogRoot.substr(1));\n      }\n      app.use(blogRoot, blog);\n    }\n    */\n\n    const logLevel = app.get('logLevel') || 'combined';\n\n    // logging\n    app.use(morgan(logLevel));\n\n    // if host sets bodyparser to true, init it\n    if (app.enabled('bodyParser')) {\n      app.use(bodyParser.json());\n      app.use(bodyParser.urlencoded({ extended: false }));\n    }\n\n    // if host sets cookieparser to true, init it:\n    if (app.enabled('cookieParser')) {\n      app.use(cookieParser());\n    }\n\n    // load host specific router\n    if (app.get('router')) {\n      const routes = app.get('router');\n\n      if (isArray(routes) || isObject(routes)) {\n        Object.keys(routes).forEach(\n          key =>\n            app.use(routes[key])\n          );\n      } else if (typeof routes === 'function') {\n        app.use(routes);\n      }\n    }\n\n    // default router\n    app.use(router);\n\n    // we are in a 404 error\n    app.use(handle404);\n\n    // oops, worst case fallback, 500 server error.\n    app.use(handle500);\n\n    return app;\n  };\n"]}