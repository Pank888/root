{"version":3,"sources":["src/hosts.js","src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { readdir, exists } from 'fs';\nimport { waterfall, filter, map } from 'async';\nimport { join } from 'path';\nimport vhost from 'vhost';\nimport { log } from 'magic-log';\nimport skeleton from 'magic-skeleton';\n\nconst cwd = process.cwd();\nconst hostRootDir = join(cwd, 'hosts');\nlet M = null;\n\nconst noop = () => {};\n\nexport const mount =\n  (magic, cb = noop) => {\n    M = magic;\n\n    waterfall([\n      findHosts,\n      mountHosts,\n    ], cb);\n  };\n\nexport const findHosts =\n  (cb = noop) => {\n    const args = {};\n\n    readdir(\n      hostRootDir,\n      (err, files) => {\n        filter(\n          files,\n          hostFilter,\n          hosts => {\n            args.hosts = hosts;\n            cb(err, args);\n          }\n        );\n      }\n    );\n  };\n\nconst hostFilter =\n  (file, cb = noop) => {\n    const fileDir = join(hostRootDir, file, 'H.js');\n    exists(fileDir, exists => {\n      cb(exists);\n    });\n  };\n\nconst mountHosts =\n  (args, cb = noop) => {\n    map(args.hosts, mountHost, err => {\n      cb(err, args);\n    });\n  };\n\nconst mountHost =\n  (host, cb = noop) => {\n    log('host', host);\n    const hostDir = join(hostRootDir, host);\n    const hostApp = require(join(hostDir, 'H.js'));\n    const skel = skeleton(M, hostApp, hostDir);\n    const config = require(join(hostDir, 'config'));\n    const env = (skel.get('env') || 'production');\n    const hosts = (config.hosts[env] ? config.hosts[env] : []);\n\n    if (!hosts) {\n      return cb('config.js needs an attribute named hosts.');\n    }\n\n    hosts.forEach(\n      host => {\n        M.use(vhost(host, skel));\n        log('vhosts started for subhost ' + host);\n      });\n\n    cb(null);\n  };\n","import express from 'express';\nimport { waterfall } from 'async';\nimport { join } from 'path';\nimport { mount } from 'magic-hosts';\nimport log from 'magic-server-log';\n\nconst noop = () => {};\n\nexport class Magic {\n  constructor =\n    config => {\n      this.M = express();\n      this.cwd = process.cwd();\n\n      if (!config.defaults) {\n        throw new Error(`server config.js missing config.defaults key, ${config}`);\n      }\n\n      this.conf = config.defaults[process.env] || false;\n    };\n\n  init =\n    (cb = noop) => {\n      const { spawn, autoload, listen } = this;\n      waterfall(\n        [spawn, autoload, listen],\n        err => {\n          if (err) {\n            log.error('magic startup error:', err);\n            return cb(err);\n          }\n\n          log.success('Magic listening to port:', this.M.get('port'));\n\n          cb(null);\n        }\n      );\n    };\n\n  spawn =\n    (cb = noop) => {\n    // executes before hosts\n      this.M.set('env', this.env);\n      log('conf.PORT', this.conf.PORT);\n\n      this.M.set('port', (this.conf.PORT || process.env.PORT || 5000));\n\n      log(`this.M.get(\"port\"): ${this.M.get('port')}`);\n\n      this.M.set('dirs', {\n        'hosts': join(this.cwd, 'hosts'),\n      });\n\n      log(`this.M spawned, env = ${this.M.get('env')}`);\n      cb(null);\n    };\n\n  autoload =\n    (cb = noop) => {\n      // proxies to the various hosts (vhost for now, node proxy tbd)\n      log('autoload mounts');\n      mount(this.M, cb);\n    };\n\n  listen =\n    (cb = noop) => {\n      const port = this.M.get('port');\n\n      // gets executed after all hosts executed\n      this.M.use(\n        (req, res, next) => {\n          const { host } = this.conf;\n\n          if (host) {\n            log('magic error handler redirecting to defaulthost:', host);\n            return res.redirect(host);\n          }\n\n          log.warn('magic', 'final error handler, no default host found');\n          // TODO: Render this as a global 404 error page, ugly but working\n          res.send('final error handler. this is the end of the internet.');\n        }\n      );\n\n      this.M.listen(port, cb);\n    };\n}\n\nexport default Magic;\n"]}