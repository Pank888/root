{"version":3,"sources":["../src/logging.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AACA,kBAAQ,QAAR,GAAmB,IAAnB;;AAEO,IAAM,4CACX,SADW,eACX,CAAC,GAAD,EAAS;AACP,MAAM,OAAO,IAAI,GAAJ,CAAQ,MAAR,CAAb;AACA,MAAM,MAAM,IAAI,GAAJ,CAAQ,KAAR,CAAZ;AACA,MAAM,OAAO,IAAI,GAAJ,CAAQ,MAAR,KAAmB,WAAhC;AACA,MAAM,SAAS,KAAK,IAAL,IAAa,gBAAK,SAAL,EAAgB,IAAhB,EAAsB,MAAtB,CAA5B;AACA,MAAM,UAAU,IAAI,GAAJ,CAAQ,SAAR,KAAsB,gBAAK,MAAL,EAAgB,IAAhB,iBAAtC;;AAEA,MAAM,sBACJ,QAAQ,aAAR,GACI,EAAE,gBAAgB,IAAlB,EAAwB,WAAW,IAAnC,EADJ,GAEI,EAHN;;AAKA,MAAI,GAAJ,CAAQ,mCAAa,mBAAb,CAAR;;AAEA,MAAM,QACF,QAAQ,aAAR,GACE,OADF,GAEE,MAHN;;AAKA,MAAM,aAAa,CACjB,IAAI,kBAAQ,UAAR,CAAmB,OAAvB,CAA+B;AAC7B,gBAD6B;AAE7B,sBAAkB,IAFW;AAG7B,UAAM,KAHuB;AAI7B,cAAU;AAJmB,GAA/B,CADiB,CAAnB;;AASA,MAAI,OAAJ,EAAa;AACX,eAAW,IAAX,CAAgB,IAAI,kBAAQ,UAAR,CAAmB,IAAvB,CAA4B;AAC1C,gBAAU,OADgC;AAE1C,kBAF0C;AAG1C,wBAAkB,IAHwB;AAI1C,YAAM,IAJoC;AAK1C,eAAS,OALiC,E;AAM1C,gBAAU,EANgC;AAO1C,gBAAU;AAPgC,KAA5B,CAAhB;AASD;;AAED,MAAM,SAAS,IAAI,kBAAQ,MAAZ,CAAmB;AAChC,0BADgC;AAEhC,iBAAa;AAFmB,GAAnB,CAAf;;AAKA,MAAI,GAAJ,CAAQ,QAAR,EAAkB,MAAlB;;AAEA,MAAM,WAAW,IAAI,GAAJ,CAAQ,UAAR,KAAuB,UAAxC;AACA,MAAI,GAAJ,CAAQ,sBAAO,QAAP,EAAiB,EAAE,QAAQ,gBAAC,GAAD;AAAA,aAAS,OAAO,IAAP,CAAY,GAAZ,CAAT;AAAA,KAAV,EAAjB,CAAR;AACD,CAlDI;;kBAoDQ,e","file":"logging.js","sourceRoot":"./src/index.js","sourcesContent":["import { join } from 'path'\nimport errorHandler from 'express-error-handler'\nimport morgan from 'morgan'\nimport winston from 'winston'\nwinston.emitErrs = true\n\nexport const initiateLogging =\n  (app) => {\n    const dirs = app.get('dirs')\n    const env = app.get('env')\n    const name = app.get('name') || 'magic-app'\n    const logDir = dirs.logs || join(__dirname, '..', 'logs')\n    const logFile = app.get('logFile') || join(logDir, `${name}-access.log`)\n\n    const errorHandlerOptions =\n      env === 'development'\n        ? { dumpExceptions: true, showStack: true }\n        : {}\n\n    app.use(errorHandler(errorHandlerOptions))\n\n    const level =\n        env === 'development'\n        ? 'debug'\n        : 'info'\n\n    const transports = [\n      new winston.transports.Console({\n        level,\n        handleExceptions: true,\n        json: false,\n        colorize: true,\n      }),\n    ]\n\n    if (logFile) {\n      transports.push(new winston.transports.File({\n        filename: logFile,\n        level,\n        handleExceptions: true,\n        json: true,\n        maxsize: 5242880, // 5MB\n        maxFiles: 50,\n        colorize: false,\n      }))\n    }\n\n    const logger = new winston.Logger({\n      transports,\n      exitOnError: false,\n    })\n\n    app.set('logger', logger)\n\n    const logLevel = app.get('logLevel') || 'combined'\n    app.use(morgan(logLevel, { stream: (msg) => logger.info(msg) }))\n  }\n\nexport default initiateLogging\n"]}