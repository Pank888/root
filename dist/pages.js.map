{"version":3,"sources":["../src/pages.js"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAEA,IAAM,UAAU,aAAV;;AAEN,IAAM,OAAO,SAAP,IAAO,GAAM,EAAN;;AAEN,IAAM,0CACX,SADW,cACX,CAAC,GAAD,EAAM,QAAN,EAAgC;MAAhB,6DAAO,oBAAS;;AAC9B,gCAAO,oCAA+B,QAAtC,EAD8B;AAE9B,MAAI,MAAJ,CAAW,QAAX,EAAqB,UAAC,GAAD,EAAM,IAAN,EAAe;AAClC,QAAI,GAAJ,EAAS;AACP,+BAAI,KAAJ,CAAa,qCAAgC,GAA7C,EADO;KAAT;;AAIA,QAAI,CAAC,IAAD,EAAO;AACT,+BAAI,KAAJ,CAAa,kDAA6C,QAA1D,EADS;KAAX;;AAIA,QAAI,OAAO,CAAC,IAAD,EAAO;;AAEhB,aAAO,MAAP,CAFgB;KAAlB;;AAKA,QAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,IAArB,EAdkC;GAAf,CAArB,CAF8B;CAAhC;;AAoBF,IAAM,UACJ,SADI,OACJ;MAAC,+DAAS;MAAI,+DAAS;SACrB,OAAO,IAAP,IAAe,OAAO,IAAP,IAAe,OAA9B;CADF;;AAGF,IAAM,cACJ,SADI,WACJ,cAAoC;yBAAjC,OAAiC;MAAjC,qCAAS,iBAAwB;2BAAjB,OAAiB;MAAjB,sCAAS,kBAAQ;;AAClC,MAAM,OAAO,QAAQ,MAAR,EAAgB,MAAhB,CAAP,CAD4B;AAElC,MAAI,WAAW,QAAX,CAF8B;;AAIlC,MAAI,UAAU,OAAO,GAAP,EAAY;AACxB,gBAAY,OAAO,GAAP,GAAa,GAAb,CADY;GAA1B;;AAIA,cAAY,IAAZ,CARkC;;AAUlC,gCAAO,gCAA2B,2BAAsB,QAAxD,EAVkC;;AAYlC,SAAO;AACL,cADK;AAEL,sBAFK;GAAP,CAZkC;CAApC;;AAkBK,IAAM,sBACX,cAAC,GAAD,EAAM,GAAN,EAA2B;MAAhB,6DAAO,oBAAS;;qBACE,YAAY,GAAZ,EAAiB,GAAjB,EADF;;MACjB,yBADiB;MACX,iCADW;;;AAGzB,MAAI,MAAJ,gBACK,IAAI,MAAJ;AACH;AACA;IAHF,CAHyB;;AASzB,gCAAI,eAAJ,EAAqB,IAArB,EAA2B,eAA3B,EAA4C,QAA5C,EATyB;;AAWzB,SAAO,eAAe,GAAf,EAAoB,QAApB,EAA8B,IAA9B,CAAP,CAXyB;CAA3B","file":"pages.js","sourceRoot":"./src/index.js","sourcesContent":["import log from 'magic-server-log';\n\nconst libName = 'magic-pages';\n\nconst noop = () => {};\n\nexport const renderTemplate =\n  (res, template, next = noop) => {\n    log(`${libName}: rendering template ${template}`);\n    res.render(template, (err, html) => {\n      if (err) {\n        log.error(`${libName}: error in res.render ${err}`);\n      }\n\n      if (!html) {\n        log.error(`${libName}: html file was empty for template ${template}`);\n      }\n\n      if (err || !html) {\n        // 404, no error passing, next will handle it!\n        return next();\n      }\n\n      res.status(200).send(html);\n    });\n  };\n\nconst getPage =\n  (params = {}, locals = {}) =>\n    locals.page || params.page || 'index';\n\nconst getTemplate =\n  ({ params = {}}, { locals = {}}) => {\n    const page = getPage(params, locals);\n    let template = 'pages/';\n\n    if (params && params.dir) {\n      template += params.dir + '/';\n    }\n\n    template += page;\n\n    log(`${libName} Rendering Page: ${page} with template ${template}`);\n\n    return {\n      page,\n      template,\n    };\n  };\n\nexport const page =\n  (req, res, next = noop) => {\n    const { page, template } = getTemplate(req, res);\n\n    res.locals = {\n      ...res.locals,\n      page,\n      template,\n    };\n\n    log('render page: ', page, 'with template', template);\n\n    return renderTemplate(res, template, next);\n  };\n"]}