{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"./src/index.js","sourcesContent":["import express from 'express'\nimport basicAuth from 'node-basicauth'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport compression from 'compression'\nimport babelify from 'express-babelify-middleware'\nimport { join } from 'path'\nimport favicon from './favicon'\nimport stylus from 'stylus'\nimport nib from 'nib'\nimport Nedb from 'nedb'\nimport { Mailgun } from 'mailgun'\n\nimport { isArray, isString } from 'magic-types'\n\nimport appRoutes, { customRoutes } from './routes'\nimport initApi from './api'\nimport initiateLogging from './logging'\nimport analytics from './analytics'\nimport headers from './headers'\nimport handle404 from './errors/handle404'\nimport handle500 from './errors/handle500'\n\n// import { init as initAdmin } from 'magic-admin';\n// import blog from 'magic-blog';\n\nexport { renderPage } from './pages'\n\nexport const conjure =\n  () =>\n    express()\n\nexport const Express = express\n\nexport const Router = express.Router\n\nconst start =\n  ({ app, port }) => {\n    app.listen(port, err => {\n      const log = app.get('logger')\n      if (err) {\n        log.error(err)\n      }\n\n      log.info(`app listening to port ${port}`)\n    })\n  }\n\nexport const Magic = app => {\n  const dir = app.get('cwd') || join(process.cwd(), 'src')\n  const env = app.get('env') || 'production'\n  const publicDir = app.get('publicDir') || join('client', 'public')\n  const viewDir = app.get('viewDir') || join('client', 'views')\n  const logDir = app.get('logDir') || join('..', 'logs')\n  const appDirs = app.get('dirs')\n  const basicAuthConfig = app.get('basicAuth')\n  const port = app.get('port') || 1337\n  const viewEngine = app.get('view engine') || 'pug'\n  const babelifyFiles = app.get('babelifyFiles')\n  const dirs = {\n    root: dir,\n    public: join(dir, publicDir),\n    views: join(dir, viewDir),\n    logs: join(dir, logDir),\n    ...appDirs,\n  }\n\n  // set req.app and req.db to use in middleware\n  app.use(\n    (req, res, next) => {\n      req.app = app\n      req.db = db\n\n      next()\n    }\n  )\n\n  const dbFile = app.get('dbFile') || false\n  const mailgunApiKey = app.get('mailgunApiKey') || false\n\n  app.set('dirs', dirs)\n\n  favicon(app)\n\n  app.set('views', dirs.views)\n  app.set('view engine', viewEngine)\n\n  app.use(compression({ threshold: 128 }))\n\n  // initiate nedb if defined\n  let db\n  if (dbFile) {\n    db = new Nedb({\n      filename: dbFile,\n      autoload: true,\n    })\n    app.set('db', db)\n  }\n\n  // initiate mailgun if defined\n  if (mailgunApiKey) {\n    app.set('mg', new Mailgun(mailgunApiKey))\n  }\n\n  // set expiry and custom headers\n  app.use(headers)\n\n  // enable http basicAuth\n  if (basicAuthConfig) {\n    app.use(basicAuth(basicAuthConfig))\n  }\n\n  const css = app.get('css') || stylus\n  app.set('css', css)\n\n  const cssMiddleware =\n    (str, path) =>\n      css(str)\n        .set('filename', path)\n        .set('compress', env === 'production')\n        .use(nib())\n        .import('nib')\n\n  app.use(css.middleware({\n    src: dirs.public,\n    maxage: '1d',\n    compile: cssMiddleware,\n  }))\n\n  if (isString(babelifyFiles) || isArray(babelifyFiles)) {\n    [].concat(babelifyFiles).forEach(\n      f => {\n        // Precompile a browserified file at a path\n        const fileUrl = `/js/${f}.js`\n        const bundleUrl = `${dirs.public}/js/${f}/index.js`\n\n        app.use(fileUrl, babelify(bundleUrl))\n      }\n    )\n  }\n\n  app.use(express.static(join(__dirname, 'public'), { maxAge: '1w' }))\n\n  app.use(express.static(dirs.public, { maxAge: '1d' }))\n\n  // if (app.enabled('admin')) {\n  //   app.use(initAdmin);\n  // }\n\n  /*\n  // Blog Middleware\n  if (app.get('blogRoot')) {\n    let blogRoot = app.get('blogRoot');\n    if (typeof blogRoot !== 'string' && typeof blogRoot !== 'number') {\n      blogRoot = 'blog';\n    }\n    if (blogRoot.charAt(0) !== '/') {\n      blogRoot = '/' + blogRoot;\n    } else {\n      app.set('blogRoot', blogRoot.substr(1));\n    }\n    app.use(blogRoot, blog);\n  }\n  */\n\n  initiateLogging(app)\n\n  // if host sets bodyparser to true, init it\n  if (app.enabled('bodyParser')) {\n    app.use(bodyParser.json())\n    app.use(bodyParser.urlencoded({ extended: true }))\n  }\n\n  // if host sets cookieparser to true, init it:\n  if (app.enabled('cookieParser')) {\n    app.use(cookieParser())\n  }\n\n  analytics(app)\n\n  // initiate api if defined\n  const apiRoutes = app.get('api')\n  if (apiRoutes) {\n    app.use(initApi(apiRoutes))\n  }\n\n  customRoutes(app)\n\n  // default router\n  app.use(appRoutes)\n\n  // we are in a 404 error\n  app.use(handle404)\n\n  // oops, worst case fallback, 500 server error.\n  app.use(handle500)\n\n  start({ app, port })\n\n  return app\n}\n\nexport default Magic\n"]}