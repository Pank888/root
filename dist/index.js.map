{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"./src/index.js","sourcesContent":["import express from 'express'\nimport basicAuth from 'node-basicauth'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport compression from 'compression'\nimport babelify from 'express-babelify-middleware'\nimport fs from 'fs'\nimport morgan from 'morgan'\nimport winston from 'winston'\nimport errorHandler from 'express-error-handler'\nimport { join } from 'path'\nimport favicon from 'serve-favicon'\nimport stylus from 'stylus'\nimport nib from 'nib'\nimport Nedb from 'nedb'\nimport { Mailgun } from 'mailgun'\n\nimport { isArray, isFunction, isString, isIterable } from 'magic-types'\nimport log from 'magic-server-log'\n\nimport appRoutes from './routes'\nimport initApi from './api'\nimport headers from './headers'\nimport handle404 from './errors/handle404'\nimport handle500 from './errors/handle500'\n\n// import { init as initAdmin } from 'magic-admin';\n// import blog from 'magic-blog';\n\nexport { renderPage } from './pages'\n\nexport const conjure =\n  () =>\n    express()\n\nexport const Express = express\n\nexport const Router = express.Router\n\nconst start =\n  ({ app, port }) => {\n    app.listen(port, err => {\n      if (err) {\n        log.error(err)\n      }\n\n      log(`app listening to port ${port}`)\n    })\n  }\n\nexport const Magic = app => {\n  const dir = app.get('cwd') || join(process.cwd(), 'src')\n  const css = app.get('css') || stylus\n  const routes = app.get('routes')\n  const env = app.get('env') || 'production'\n  const publicDir = app.get('publicDir') || join('client', 'public')\n  const viewDir = app.get('viewDir') || join('client', 'views')\n  const appDirs = app.get('dirs')\n  const basicAuthConfig = app.get('basicAuth')\n  const port = app.get('port') || 1337\n  const viewEngine = app.get('view engine') || 'pug'\n  const babelifyFiles = app.get('babelifyFiles')\n  const logLevel = app.get('logLevel') || 'combined'\n  const dirs = {\n    root: dir,\n    public: join(dir, publicDir),\n    views: join(dir, viewDir),\n    ...appDirs,\n  }\n  const dbFile = app.get('dbFile') || false\n  const mailgunApiKey = app.get('mailgunApiKey') || false\n\n  const apiRoutes = app.get('api')\n  let api\n  if (apiRoutes) {\n    api = initApi(apiRoutes)\n  }\n\n  let db\n  if (dbFile) {\n    db = new Nedb({\n      filename: dbFile,\n      autoload: true,\n    })\n    app.set('db', db)\n  }\n\n  if (mailgunApiKey) {\n    app.set('mg', new Mailgun(mailgunApiKey))\n  }\n\n  const logFiles = {\n    access: join(dir, 'logs', 'access.log'),\n    error: join(dir, 'logs', 'error.log'),\n    ...app.get('logFiles'),\n  }\n\n  const faviconPath = join(dirs.public, 'favicon.ico')\n\n  app.set('css', css)\n  app.set('dirs', dirs)\n\n  // set req.app and req.db to use in middleware\n  app.use(\n    (req, res, next) => {\n      req = {\n        ...req,\n        app,\n        db,\n      }\n\n      next()\n    })\n\n  // set expiry headers\n  app.use(headers)\n\n  // enable http basicAuth\n  if (basicAuthConfig) {\n    app.use(basicAuth(basicAuthConfig))\n  }\n\n  // fs.existsSync only gets called once on first request\n  if (faviconPath && !app.get('faviconChecked') && !app.get('faviconExists')) {\n    app.set('faviconChecked', true)\n    app.set('faviconExists', fs.existsSync(faviconPath))\n  }\n\n  if (app.get('faviconExists')) {\n    app.use(favicon(faviconPath))\n  }\n\n  app.set('views', dirs.views)\n  app.set('view engine', viewEngine)\n\n  app.use(compression({ threshold: 128 }))\n\n  const cssMiddleware =\n    (str, path) =>\n      css(str)\n        .set('filename', path)\n        .set('compress', env === 'production')\n        .use(nib())\n        .import('nib')\n\n  app.use(css.middleware({\n    src: dirs.public,\n    maxage: '1d',\n    compile: cssMiddleware,\n  }))\n\n  if (isString(babelifyFiles) || isArray(babelifyFiles)) {\n    [].concat(babelifyFiles).forEach(\n      f => {\n        // Precompile a browserified file at a path\n        const fileUrl = `/js/${f}.js`\n        const bundleUrl = `${dirs.public}/js/${f}/index.js`\n\n        app.use(fileUrl, babelify(bundleUrl))\n      }\n    )\n  }\n\n  app.use(express.static(join(__dirname, 'public'), { maxAge: '1w' }))\n\n  app.use(express.static(dirs.public, { maxAge: '1d' }))\n\n  // if (app.enabled('admin')) {\n  //   app.use(initAdmin);\n  // }\n\n  /*\n   TODO: reenable\n  if (app.get('blogRoot')) {\n    let blogRoot = app.get('blogRoot');\n    if (typeof blogRoot !== 'string' && typeof blogRoot !== 'number') {\n      blogRoot = 'blog';\n    }\n    if (blogRoot.charAt(0) !== '/') {\n      blogRoot = '/' + blogRoot;\n    } else {\n      app.set('blogRoot', blogRoot.substr(1));\n    }\n    app.use(blogRoot, blog);\n  }\n   */\n\n  // logging\n  app.use(morgan(logLevel))\n\n  app.use(\n    app.get('env') === 'development'\n      ? errorHandler({ dumpExceptions: true, showStack: true })\n      : errorHandler()\n  )\n\n  if (logFiles) {\n    if (logFiles.access) {\n      winston.add(winston.transports.File, {\n        filename: logFiles.access,\n      })\n    }\n\n    if (logFiles.error) {\n      winston.handleExceptions(new winston.transports.File({\n        filename: logFiles.error,\n      }))\n    }\n  }\n\n  // if host sets bodyparser to true, init it\n  if (app.enabled('bodyParser')) {\n    app.use(bodyParser.json())\n    app.use(bodyParser.urlencoded({ extended: true }))\n  }\n\n  // if host sets cookieparser to true, init it:\n  if (app.enabled('cookieParser')) {\n    app.use(cookieParser())\n  }\n\n  if (api) {\n    app.use(api)\n  }\n  // load host specific router\n  if (routes) {\n    if (isIterable(routes)) {\n      Object.keys(routes).forEach(\n        key => {\n          const route = routes[key]\n          const { path, handler, method = 'get' } = routes[key]\n\n          const isValidMethod = ['get', 'post'].some(v => v === method)\n          if (!isValidMethod) {\n            throw new Error(`Route method of type ${method} is not valid`)\n          }\n\n          if (!isString(path)) {\n            throw new Error(`Route needs a path string to work ${route}`)\n          }\n\n          if (!isFunction(handler)) {\n            throw new Error(`Route needs a handler function to work ${route}`)\n          }\n\n          app[method](path, handler)\n        }\n      )\n    }\n    else if (isFunction(routes)) {\n      app.use(routes)\n    }\n  }\n\n  // default router\n  app.use(appRoutes)\n\n  // we are in a 404 error\n  app.use(handle404)\n\n  // oops, worst case fallback, 500 server error.\n  app.use(handle500)\n\n  start({ app, port })\n\n  return app\n}\n\nexport default Magic\n"]}