{"version":3,"sources":["../src/hosts.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAM,MAAM,QAAQ,GAAR,EAAN;AACN,IAAM,cAAc,gBAAK,GAAL,EAAU,OAAV,CAAd;AACN,IAAI,IAAI,IAAJ;;AAEJ,IAAM,OAAO,SAAP,IAAO,GAAM,EAAN;;AAEN,IAAM,wBACX,SADW,KACX,CAAC,KAAD,EAAsB;MAAd,2DAAK,oBAAS;;AACpB,MAAI,KAAJ,CADoB;;AAGpB,wBAAU,CACR,SADQ,EAER,UAFQ,CAAV,EAGG,EAHH,EAHoB;CAAtB;;AASK,IAAM,gCACX,SADW,SACX,GAAe;MAAd,2DAAK,oBAAS;;AACb,MAAM,OAAO,EAAP,CADO;;AAGb,mBACE,WADF,EAEE,UAAC,GAAD,EAAM,KAAN,EAAgB;AACd,uBACE,KADF,EAEE,UAFF,EAGE,iBAAS;AACP,WAAK,KAAL,GAAa,KAAb,CADO;AAEP,SAAG,GAAH,EAAQ,IAAR,EAFO;KAAT,CAHF,CADc;GAAhB,CAFF,CAHa;CAAf;;AAkBF,IAAM,aACJ,SADI,UACJ,CAAC,IAAD,EAAqB;MAAd,2DAAK,oBAAS;;AACnB,MAAM,UAAU,gBAAK,WAAL,EAAkB,IAAlB,EAAwB,MAAxB,CAAV,CADa;AAEnB,kBAAO,OAAP,EAAgB,kBAAU;AACxB,OAAG,MAAH,EADwB;GAAV,CAAhB,CAFmB;CAArB;;AAOF,IAAM,aACJ,SADI,UACJ,CAAC,IAAD,EAAqB;MAAd,2DAAK,oBAAS;;AACnB,kBAAI,KAAK,KAAL,EAAY,SAAhB,EAA2B,eAAO;AAChC,OAAG,GAAH,EAAQ,IAAR,EADgC;GAAP,CAA3B,CADmB;CAArB;;AAMF,IAAM,YACJ,SADI,SACJ,CAAC,IAAD,EAAqB;MAAd,2DAAK,oBAAS;;AACnB,qBAAI,MAAJ,EAAY,IAAZ,EADmB;AAEnB,MAAM,UAAU,gBAAK,WAAL,EAAkB,IAAlB,CAAV,CAFa;AAGnB,MAAM,UAAU,QAAQ,gBAAK,OAAL,EAAc,MAAd,CAAR,CAAV,CAHa;AAInB,MAAM,OAAO,6BAAS,CAAT,EAAY,OAAZ,EAAqB,OAArB,CAAP,CAJa;AAKnB,MAAM,SAAS,QAAQ,gBAAK,OAAL,EAAc,QAAd,CAAR,CAAT,CALa;AAMnB,MAAM,MAAO,KAAK,GAAL,CAAS,KAAT,KAAmB,YAAnB,CANM;AAOnB,MAAM,QAAS,OAAO,KAAP,CAAa,GAAb,IAAoB,OAAO,KAAP,CAAa,GAAb,CAApB,GAAwC,EAAxC,CAPI;;AASnB,MAAI,CAAC,KAAD,EAAQ;AACV,WAAO,GAAG,2CAAH,CAAP,CADU;GAAZ;;AAIA,QAAM,OAAN,CACE,gBAAQ;AACN,MAAE,GAAF,CAAM,qBAAM,IAAN,EAAY,IAAZ,CAAN,EADM;AAEN,uBAAI,gCAAgC,IAAhC,CAAJ,CAFM;GAAR,CADF,CAbmB;;AAmBnB,KAAG,IAAH,EAnBmB;CAArB","file":"hosts.js","sourceRoot":"./src/index.js","sourcesContent":["import { readdir, exists } from 'fs';\nimport { waterfall, filter, map } from 'async';\nimport { join } from 'path';\nimport vhost from 'vhost';\nimport { log } from 'magic-log';\nimport skeleton from 'magic-skeleton';\n\nconst cwd = process.cwd();\nconst hostRootDir = join(cwd, 'hosts');\nlet M = null;\n\nconst noop = () => {};\n\nexport const mount =\n  (magic, cb = noop) => {\n    M = magic;\n\n    waterfall([\n      findHosts,\n      mountHosts,\n    ], cb);\n  };\n\nexport const findHosts =\n  (cb = noop) => {\n    const args = {};\n\n    readdir(\n      hostRootDir,\n      (err, files) => {\n        filter(\n          files,\n          hostFilter,\n          hosts => {\n            args.hosts = hosts;\n            cb(err, args);\n          }\n        );\n      }\n    );\n  };\n\nconst hostFilter =\n  (file, cb = noop) => {\n    const fileDir = join(hostRootDir, file, 'H.js');\n    exists(fileDir, exists => {\n      cb(exists);\n    });\n  };\n\nconst mountHosts =\n  (args, cb = noop) => {\n    map(args.hosts, mountHost, err => {\n      cb(err, args);\n    });\n  };\n\nconst mountHost =\n  (host, cb = noop) => {\n    log('host', host);\n    const hostDir = join(hostRootDir, host);\n    const hostApp = require(join(hostDir, 'H.js'));\n    const skel = skeleton(M, hostApp, hostDir);\n    const config = require(join(hostDir, 'config'));\n    const env = (skel.get('env') || 'production');\n    const hosts = (config.hosts[env] ? config.hosts[env] : []);\n\n    if (!hosts) {\n      return cb('config.js needs an attribute named hosts.');\n    }\n\n    hosts.forEach(\n      host => {\n        M.use(vhost(host, skel));\n        log('vhosts started for subhost ' + host);\n      });\n\n    cb(null);\n  };\n"]}